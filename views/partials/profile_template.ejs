<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Page</title>
    <!-- Link Bootstrap Icons CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        .profile-picture {
            width: 150px;
            height: 150px;
            border-radius: 50%;
            object-fit: cover;
            object-position: center;
        }

        .profile-picture-container {
            position: relative; /* Ensure the container is relative for absolute positioning */
            width: 150px; /* Set the width of the container to match the profile picture */
            height: 150px; /* Set the height of the container to match the profile picture */
			border-radius:50%;
        }
		.icon{
			position:absolute;
            top: 50%; /* Position it vertically centered within the container */
            left: 50%; /* Position it horizontally centered within the container */
            transform: translate(-50%, -50%);
		}
        .change-picture-icon {
            display: none;
			width: 150px;
			height:150px;
            position: absolute;
            top: 50%; /* Position it vertically centered within the container */
            left: 50%; /* Position it horizontally centered within the container */
            transform: translate(-50%, -50%);
            color: white;
            font-size: 24px;
            padding: 0; /* Adjust padding to ensure it forms a circle */
            border-radius: 50%;
            cursor: pointer;
            box-sizing: border-box; /* Ensure padding does not affect the size */

            background-color: rgba(0, 0, 0, 0.6);
        }
        .profile-picture-container:hover .change-picture-icon {
            display: block;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1 class="mt-5">User Page</h1>
        <div id="userInfo" class="mt-3">
            <div class="row">
                <div class="col-md-4">
                    <div class="profile-picture-container">
                        <img src="<%= pfp %>" alt="Profile Picture" class="profile-picture" id="profile-picture">
                        <div class="change-picture-icon" data-bs-toggle="modal" data-bs-target="#editProfilePictureModal">
                            <i class="bi bi-pencil-square icon" ></i> <!-- Using Bootstrap Icons pencil icon -->
                        </div>
                    </div>
                </div>
                <div class="col-md-8">
                    <p><strong>Email:</strong> <%= email %></p>
                    <p><strong>First Name:</strong> <span id="display-firstname"><%= firstname %></span></p>
                    <p><strong>Last Name:</strong> <span id="display-lastname"><%= lastname %></span></p>
                    <p><strong>Phone Number:</strong> <span id="display-phone"><%= phone %></span></p>
                    <p><strong>Age:</strong> <span id="display-age"><%= age %></span></p>
                </div>
            </div>
        </div>
        <button type="button" class="btn btn-primary mt-3" data-bs-toggle="modal" data-bs-target="#editProfileModal">Edit Profile</button>
        <button type="button" class="btn btn-warning mt-3" data-bs-toggle="modal" data-bs-target="#changePasswordModal">Change Password</button>
        <button type="button" class="btn mt-3" data-bs-toggle="modal" data-bs-target="#createPostModal">Create Post</button>
        <button type="button" class="btn btn-danger mt-3" id="btn-logout">Logout</button>
    </div>

    <!--Posts section-->
    <div id="userPosts" class="mt-5">
        <h2>All Posts</h2>
        <% if (posts.length > 0) { %>
            <% posts.forEach(function(post) { %>
                <div class="card mb-3">
                    <div class="card-body">
                        <h5 class="card-title"><%= post.title %></h5>
                        <h6 class="card-subtitle mb-2 text-muted">By <%= post.firstname %> <%= post.lastname %> on <%= new Date(post.date).toLocaleDateString() %></h6>
                        <p class="card-text"><%= post.content %></p>
                    </div>
                </div>
            <% }) %>
        <% } else { %>
            <p>No posts available.</p>
        <% } %>
    </div>

    <!-- Optional: Include Bootstrap JS and other dependencies if required -->

</body>
<!-- Edit Profile Modal -->
<div class="modal fade" id="editProfileModal" tabindex="-1" aria-labelledby="editProfileModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editProfileModalLabel">Edit Profile</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editProfileForm">
                    <div class="mb-3 form-group">
                        <label for="firstname" class="form-label">First Name</label>
                        <input type="text" class="form-control" id="firstname" name="firstname" value="<%= firstname %>" required>
                        <div class="invalid-feedback" id="firstnameError"></div>
                    </div>
                    <div class="mb-3 form-group">
                        <label for="lastname" class="form-label">Last Name</label>
                        <input type="text" class="form-control" id="lastname" name="lastname" value="<%= lastname %>" required>
                        <div class="invalid-feedback" id="lastnameError"></div>
                    </div>
                    <div class="mb-3 form-group">
                        <label for="number" class="form-label">Phone Number</label>
                        <input type="tel" class="form-control" id="number" name="number" value="<%= phone %>" required>
                        <div class="invalid-feedback" id="numberError"></div>
                    </div>
                    <div class="mb-3 form-group">
                        <label for="age" class="form-label">Age</label>
                        <input type="number" class="form-control" id="age" name="age" value="<%= age %>" required>
                        <div class="invalid-feedback" id="ageError"></div>
                    </div>
                    <button type="submit" class="btn btn-primary">Save changes</button>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- Change Password Modal -->
<div class="modal fade" id="changePasswordModal" tabindex="-1" aria-labelledby="changePasswordModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="changePasswordModalLabel">Change Password</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="changePasswordForm">
                    <div class="mb-3 form-group">
                        <label for="currentpassword" class="form-label">Current Password</label>
                        <input type="password" class="form-control" id="currentpassword" name="currentpassword" required>
                        <div class="invalid-feedback" id="currentpasswordError"></div>
                    </div>
                    <div class="mb-3 form-group">
                        <label for="newpassword" class="form-label">New Password</label>
                        <input type="password" class="form-control" id="newpassword" name="newpassword" required>
                        <div class="invalid-feedback" id="newpasswordError"></div>
                    </div>
                    <div class="mb-3 form-group">
                        <label for="confirmpassword" class="form-label">Confirm New Password</label>
                        <input type="password" class="form-control" id="confirmpassword" name="confirmpassword" required>
                        <div class="invalid-feedback" id="confirmpasswordError"></div>
                    </div>
                    <button type="submit" class="btn btn-primary">Change Password</button>
                </form>
            </div>
        </div>
    </div>
</div>
<!--Create Post Modal-->

<!-- Edit Profile Picture Modal -->
<div class="modal fade" id="editProfilePictureModal" tabindex="-1" aria-labelledby="editProfilePictureModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editProfilePictureModalLabel">Change Profile Picture</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editProfilePictureForm" enctype="multipart/form-data">
                    <div class="mb-3 form-group">
                        <label for="newprofilepic" class="form-label">Upload New Profile Picture</label>
                        <input type="file" class="form-control" id="newprofilepic" name="newprofilepic" accept="image/*" required>
                        <div class="invalid-feedback" id="newprofilepicError"></div>
                    </div>
                    <button type="submit" class="btn btn-primary">Save changes</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
<script src="./assets/js/profile-validation.js"></script>
<script src="./assets/js/response-handler.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const editProfileModal = new bootstrap.Modal(document.getElementById('editProfileModal'));
        const editProfilePictureModal = new bootstrap.Modal(document.getElementById('editProfilePictureModal'));
        const changePasswordModal = new bootstrap.Modal(document.getElementById('changePasswordModal'));
        const logoutButton = document.getElementById('btn-logout');
        const editProfileForm = document.getElementById('editProfileForm');
        const editProfilePictureForm = document.getElementById('editProfilePictureForm');
        const changePasswordForm = document.getElementById('changePasswordForm');

        // Logout button click event handler
        logoutButton.addEventListener('click', function() {
            fetch('/logout', { method: 'POST' })
                .then(response => {
                    window.location.href = '/'
                })
                .catch(error => {
                    console.error('Error logging out:', error);
                });
        });

        // Edit profile form submission handler
        editProfileForm.addEventListener('submit', async function(event) {
            event.preventDefault();
            const formData = new FormData(event.target);
            document.querySelectorAll('.invalid-feedback').forEach(el => el.textContent = '');
            document.querySelectorAll('.form-control').forEach(el => el.classList.remove('is-invalid'));
            const validationResult = validateForm(formData, false);
            if (validationResult === true) {
				const csrfResponse = await fetch('/csrfToken', {method: 'GET'})
				if(handleResponse(csrfResponse))return;
				const csrfJson = await csrfResponse.json()
                const response = await fetch('/updateProfile', {
                    method: 'POST',
                    body: formData,
					headers:{"csrfToken":csrfJson.csrfToken}
                });
				if(handleResponse(response)) return;
                if (!response.ok) {
                    const errors = await response.json();
                    displayFormErrors(document, errors);
                } else {
					const age = parseInt(formData.get('age'), 10)
                    document.getElementById('display-firstname').textContent = formData.get('firstname');
                    document.getElementById('display-lastname').textContent = formData.get('lastname');
                    document.getElementById('display-phone').textContent = formData.get('number');
                    document.getElementById('display-age').textContent = age
					document.getElementById('age').value = age
                    // Close the modal
                    editProfileModal.hide();
                }
            } else {
                displayFormErrors(document, validationResult);
            }
        });

        // Change password form submission handler
        changePasswordForm.addEventListener('submit', async function(event) {
            event.preventDefault();
            const formData = new FormData(event.target);
            document.querySelectorAll('.invalid-feedback').forEach(el => el.textContent = '');
            document.querySelectorAll('.form-control').forEach(el => el.classList.remove('is-invalid'));
			const currPassword = formData.get('currentpassword')
			const newPassword = formData.get('newpassword')	
			const confirmPassword = formData.get('confirmpassword')
			errors = {}
			if(!validatePassword(currPassword)){
				errors.currentpassword = 'Invalid credentials'
			}
			if(!validatePassword(newPassword)){
				errors.newpassword = 'Password must be 12-63 characters long and include at least one number, one uppercase letter, one lowercase letter, and one special character (@._-!?).'	
			}
			if(confirmPassword!==newPassword){
				errors.confirmpassword = 'Passwords do not match'
			}
            if (Object.keys(errors).length===0) {
				const csrfResponse = await fetch('/csrfToken', {method: 'GET'})
				if(handleResponse(csrfResponse))return;
				const csrfJson = await csrfResponse.json()
                const response = await fetch('/changePassword', {
                    method: 'POST',
                    body: formData,
					headers:{"csrfToken":csrfJson.csrfToken}
                });
				if(handleResponse(response))return;
                if (!response.ok) {
                    const e = await response.json();
                    displayFormErrors(document, e);
                } else {
                    // Close the modal
					alert('Password changed successfully')
                    changePasswordModal.hide();
                }
            } else {
                displayFormErrors(document, errors);
            }
			changePasswordForm.reset()
        });

        // Edit profile picture form submission handler
        editProfilePictureForm.addEventListener('submit', async function(event) {
            event.preventDefault();
            const formData = new FormData(event.target);
            document.querySelectorAll('.invalid-feedback').forEach(el => el.textContent = '');
            document.querySelectorAll('.form-control').forEach(el => el.classList.remove('is-invalid'));
			if(!formData.get("newprofilepic")){
                displayFormErrors(document, {newprofilepic:'Profile picture is required'});
			}
			const csrfResponse = await fetch('/csrfToken', {method: 'GET'})
			if(handleResponse(csrfResponse))return;
			const csrfJson = await csrfResponse.json()
            const response = await fetch('/updateProfilePicture', {
                method: 'POST',
                body: formData,
				headers:{"csrfToken":csrfJson.csrfToken}
            });

			if(handleResponse(response))return;
			/* console.log("DID I MAKE IT HERE?") */
            if (!response.ok) {
				const errors= await response.json()
				displayFormErrors(document, errors)
            } else {
                const data = await response.json();
                document.querySelector('#profile-picture').src = data.newprofilepic;
                editProfilePictureModal.hide();
            }
			editProfilePictureForm.reset()
        });
    });
</script>
</body>
</html>
