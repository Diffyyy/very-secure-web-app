
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Page</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">

</head>

<body>
	<%- include('partials/header', { pfp: pfp,  firstname: firstname, lastname: lastname}) %>
    <!--Posts section-->
    <div id="userPosts" class="mt-5">
        <h2>All Posts</h2>
        <button type="button" class="btn btn-success mb-3" data-bs-toggle="modal" data-bs-target="#createPostModal">Create Post</button>
        <% if (posts.length > 0) { %>
            <% posts.forEach(function(post) { %>
                <div class="card mb-3">
                    <div class="card-body">
                        <h5 class="card-title"><%= post.title %></h5>
                        <h6 class="card-subtitle mb-2 text-muted">By <%= post.firstname %> <%= post.lastname %> on <%= new Date(post.date).toLocaleDateString() %></h6>
                        <% if (isAdmin || post.isOwner) { %>
                            <div class="mt-2">
                                <button type="button" class="btn btn-primary mt-3" 
                                    data-bs-toggle="modal" 
                                    data-bs-target="#editPostModal"
                                    data-post-id="<%= post.id %>"
                                    data-post-user="<%= post.user %>"
                                    data-post-date="<%= post.date %>"
                                    data-post-title="<%= post.title %>"
                                    data-post-content="<%= post.content %>">
                                Edit Post
                            </button>
                                <button type="button" class="btn btn-primary mt-3" data-bs-toggle="modal" data-bs-target="#deletePostModal" data-post-id="<%= post.id %>">Delete Post</button>
                            </div>
                        <% } %>
                        <p class="card-text"><%= post.content %></p>
                    </div>
                </div>
            <% }) %>
        <% } else { %>
            <p>No posts available.</p>
        <% } %>
    </div>

<!-- Create Post Modal -->
<div class="modal fade" id="createPostModal" tabindex="-1" aria-labelledby="createPostModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createPostModalLabel">Create Post</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="createPostForm" method="POST">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="newPostTitle" class="form-label">Title</label>
                        <input type="text" class="form-control" id="newPostTitle" name="title" required>
                    </div>
                    <div class="mb-3">
                        <label for="newPostContent" class="form-label">Content</label>
                        <textarea class="form-control" id="newPostContent" name="content" rows="4" required></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Create Post</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit Post Modal -->
<div class="modal fade" id="editPostModal" tabindex="-1" aria-labelledby="editPostModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editPostModalLabel">Edit Post</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="editPostForm" method="POST">
                <div class="modal-body">
                    <input type="hidden" id="postId" name="postId">
                    <div class="mb-3">
                        <label for="postTitle" class="form-label">Title</label>
                        <input type="text" class="form-control" id="postTitle" name="title" required>
                    </div>
                    <div class="mb-3">
                        <label for="postContent" class="form-label">Content</label>
                        <textarea class="form-control" id="postContent" name="content" rows="4" required></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!--Delete Post Modal-->
<div class="modal fade" id="deletePostModal" tabindex="-1" aria-labelledby="deletePostModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deletePostModalLabel">Delete post</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="deletePostForm" method="POST">
                <input type="hidden" name="postId">
                <div class="modal-body">
                    <h6>Are you sure you want to delete the post?</h6>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-danger">Delete</button>
                </div>
            </form>
        </div>
    </div>
</div>


<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
<script src="./assets/js/response-handler.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const editPostModal = new bootstrap.Modal(document.getElementById('editPostModal'));
        const editPostForm = document.getElementById('editPostForm');
        const deletePostModal = new bootstrap.Modal(document.getElementById('deletePostModal'));
        const deletePostForm = document.getElementById('deletePostForm');
        const createPostModal = new bootstrap.Modal(document.getElementById('createPostModal'));


        document.querySelectorAll('button[data-bs-target="#editPostModal"]').forEach(function(button) {
            button.addEventListener('click', function() {
                // Extract data attributes
                var postId = this.getAttribute('data-post-id');
                var postTitle = this.getAttribute('data-post-title');
                var postContent = this.getAttribute('data-post-content');
                var postDate = this.getAttribute('data-post-date'); // Optional: if you need the date

                document.querySelector('#editPostModal #postId').value = postId;
                document.querySelector('#editPostModal #postTitle').value = postTitle;
                document.querySelector('#editPostModal #postContent').value = postContent;
                // document.querySelector('#editPostModal #postDate').value = postDate; // Optional
            });
        });

        document.querySelectorAll('button[data-bs-target="#deletePostModal"]').forEach(function(button) {
            button.addEventListener('click', function() {
                // Extract data attributes
                var postId = this.getAttribute('data-post-id');

                document.querySelector('#editPostModal #postId').value = postId;
            });
        });

            

        function formatToMySQLDate(date) {
            const d = new Date(date);
            return d.getFullYear() + '-' +
                ('0' + (d.getMonth() + 1)).slice(-2) + '-' +
                ('0' + d.getDate()).slice(-2) + ' ' +
                ('0' + d.getHours()).slice(-2) + ':' +
                ('0' + d.getMinutes()).slice(-2) + ':' +
                ('0' + d.getSeconds()).slice(-2);
        }


        createPostForm.addEventListener('submit', async function(event) {
                event.preventDefault();
                const postDate = formatToMySQLDate(new Date());
                const formData = new FormData(createPostForm);
                formData.append('date', postDate);

                const csrfResponse = await fetch('/csrfToken', { method: 'GET' });
                if (handleResponse(csrfResponse)) return;
                const csrfJson = await csrfResponse.json();

                const response = await fetch('/createPost', {
                    method: 'POST',
                    body: formData,
                    headers: { "csrfToken": csrfJson.csrfToken }
                });

                if (handleResponse(response)) return;
                if (!response.ok) {
                    alert(await response.text());
                } else {
                    createPostModal.hide();
                    window.location.reload();
                }
        });

        deletePostForm.addEventListener('submit', async function(event){
            event.preventDefault();
            const formData = new FormData();
            formData.append('postId', postId.value);

            const csrfResponse = await fetch('/csrfToken', {method: 'GET'})
            if(handleResponse(csrfResponse))return;
            const csrfJson = await csrfResponse.json()
            const response = await fetch('/deletePost', {
                method: 'POST',
                body: formData,
                headers:{"csrfToken":csrfJson.csrfToken}
            });

            if(handleResponse(response)) return;
            if (!response.ok) {
				alert(await response.text())
            } else {
                // Close the modal
                editPostModal.hide();
                // FIXME: idk how to update values in the frontend so i just refresh
                window.location.reload();
                
            }
        })

        editPostForm.addEventListener('submit', async function(event){
            event.preventDefault();
            const postDate = formatToMySQLDate(new Date());
            const formData = new FormData();
            // FIXME: have a checker if the values are valid
            formData.append('postId', postId.value);
            formData.append('title', postTitle.value);
            formData.append('content', postContent.value);
            formData.append('date', postDate)

            // Log or use these values as needed
            console.log('1Post ID:', postId.value);
            console.log('2Post Title:', postTitle.value);
            console.log('3Post Content:', postContent.value);


            const csrfResponse = await fetch('/csrfToken', {method: 'GET'})
            if(handleResponse(csrfResponse))return;
            const csrfJson = await csrfResponse.json()
            const response = await fetch('/updatePostInfo', {
                method: 'POST',
                body: formData,
                headers:{"csrfToken":csrfJson.csrfToken}
            });

            if(handleResponse(response)) return;
            if (!response.ok) {
				alert(await response.text())
            } else {
                // Close the modal
                editPostModal.hide();
                // FIXME: idk how to update values in the frontend so i just refresh
                window.location.reload();
                
            }

        })

    });
</script>
</body>
</html>
